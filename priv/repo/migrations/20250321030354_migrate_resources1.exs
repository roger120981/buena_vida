defmodule BuenaVida.Repo.Migrations.MigrateResources1 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:participants_on_caregivers, primary_key: false) do
      add :assignedAt, :utc_datetime, null: false, default: fragment("(now() AT TIME ZONE 'utc')")
      add :assignedBy, :text, null: false
      add :participantId, :bigint, null: false, primary_key: true
      add :caregiverId, :bigint, null: false, primary_key: true
    end

    create table(:participants, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
    end

    alter table(:participants_on_caregivers) do
      modify :participantId,
             references(:participants,
               column: :id,
               name: "participants_on_caregivers_participantId_fkey",
               type: :bigint,
               prefix: "public"
             )
    end

    alter table(:participants) do
      add :name, :text, null: false
      add :gender, :text, null: false
      add :medicaidId, :text, null: false
      add :dob, :date, null: false
      add :location, :text, null: false
      add :community, :text, null: false
      add :address, :text, null: false
      add :primaryPhone, :text, null: false
      add :secondaryPhone, :text
      add :isActive, :boolean, null: false, default: true
      add :locStartDate, :utc_datetime, null: false
      add :locEndDate, :utc_datetime, null: false
      add :pocStartDate, :utc_datetime, null: false
      add :pocEndDate, :utc_datetime, null: false
      add :units, :bigint, null: false
      add :hours, :decimal, null: false
      add :hdm, :boolean, null: false, default: false
      add :adhc, :boolean, null: false, default: false
      add :cmID, :bigint, null: false

      add :createdAt, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updatedAt, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:case_managers, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
    end

    alter table(:participants) do
      modify :cmID,
             references(:case_managers,
               column: :id,
               name: "participants_cmID_fkey",
               type: :bigint,
               prefix: "public"
             )
    end

    create unique_index(:participants, [:name], name: "participants_unique_name_index")

    alter table(:case_managers) do
      add :name, :text, null: false
      add :email, :text
      add :phone, :text
      add :agencyId, :bigint, null: false

      add :createdAt, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updatedAt, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:caregivers, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
    end

    alter table(:participants_on_caregivers) do
      modify :caregiverId,
             references(:caregivers,
               column: :id,
               name: "participants_on_caregivers_caregiverId_fkey",
               type: :bigint,
               prefix: "public"
             )
    end

    create unique_index(:participants_on_caregivers, [:participantId, :caregiverId],
             name: "participants_on_caregivers_unique_assignment_index"
           )

    alter table(:caregivers) do
      add :name, :text, null: false
      add :email, :text
      add :phone, :text
      add :isActive, :boolean, null: false, default: true

      add :createdAt, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updatedAt, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create unique_index(:caregivers, [:name], name: "caregivers_unique_name_index")

    create table(:agencies, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
    end

    alter table(:case_managers) do
      modify :agencyId,
             references(:agencies,
               column: :id,
               name: "case_managers_agencyId_fkey",
               type: :bigint,
               prefix: "public"
             )
    end

    create unique_index(:case_managers, [:name], name: "case_managers_unique_name_index")

    alter table(:agencies) do
      add :name, :text, null: false

      add :createdAt, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updatedAt, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create unique_index(:agencies, [:name], name: "agencies_unique_name_index")
  end

  def down do
    drop_if_exists unique_index(:agencies, [:name], name: "agencies_unique_name_index")

    alter table(:agencies) do
      remove :updatedAt
      remove :createdAt
      remove :name
    end

    drop_if_exists unique_index(:case_managers, [:name], name: "case_managers_unique_name_index")

    drop constraint(:case_managers, "case_managers_agencyId_fkey")

    alter table(:case_managers) do
      modify :agencyId, :bigint
    end

    drop table(:agencies)

    drop_if_exists unique_index(:caregivers, [:name], name: "caregivers_unique_name_index")

    alter table(:caregivers) do
      remove :updatedAt
      remove :createdAt
      remove :isActive
      remove :phone
      remove :email
      remove :name
    end

    drop_if_exists unique_index(:participants_on_caregivers, [:participantId, :caregiverId],
                     name: "participants_on_caregivers_unique_assignment_index"
                   )

    drop constraint(:participants_on_caregivers, "participants_on_caregivers_caregiverId_fkey")

    alter table(:participants_on_caregivers) do
      modify :caregiverId, :bigint
    end

    drop table(:caregivers)

    alter table(:case_managers) do
      remove :updatedAt
      remove :createdAt
      remove :agencyId
      remove :phone
      remove :email
      remove :name
    end

    drop_if_exists unique_index(:participants, [:name], name: "participants_unique_name_index")

    drop constraint(:participants, "participants_cmID_fkey")

    alter table(:participants) do
      modify :cmID, :bigint
    end

    drop table(:case_managers)

    alter table(:participants) do
      remove :updatedAt
      remove :createdAt
      remove :cmID
      remove :adhc
      remove :hdm
      remove :hours
      remove :units
      remove :pocEndDate
      remove :pocStartDate
      remove :locEndDate
      remove :locStartDate
      remove :isActive
      remove :secondaryPhone
      remove :primaryPhone
      remove :address
      remove :community
      remove :location
      remove :dob
      remove :medicaidId
      remove :gender
      remove :name
    end

    drop constraint(:participants_on_caregivers, "participants_on_caregivers_participantId_fkey")

    alter table(:participants_on_caregivers) do
      modify :participantId, :bigint
    end

    drop table(:participants)

    drop table(:participants_on_caregivers)
  end
end
